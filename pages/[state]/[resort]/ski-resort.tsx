import Head from 'next/head';
import Elevation from '../../../components/CardContents/Elevation';
import ImportantDates from '../../../components/CardContents/ImportantDates';
import LiftsList from '../../../components/CardContents/LiftsList';
import TerrainOverview from '../../../components/CardContents/TerrainOverview';
import InfoPageLayout from '../../../layouts/InfoPageLayout';
import { getAllResortNames, getResort } from '../../../services/resortsService';
import { ResortInfo, ResortNameObj, StaticProps } from '../../../types';
import { unslugify } from '../../../utilities/slug';

interface Props {
  resortInfo: ResortInfo;
}

const SkiResort = ({ resortInfo }: Props) => {
  return (
    <>
      <Head>
        <title>On The Snow Clone</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <InfoPageLayout
        link={`/${resortInfo.state}/ski-resorts`}
        linkText={unslugify(resortInfo.state)}
        title={resortInfo.name}
      >
        <>
          <TerrainOverview resortInfo={resortInfo} />
          <LiftsList resortInfo={resortInfo} />
          <Elevation resortInfo={resortInfo} />
          <ImportantDates resortInfo={resortInfo} />
        </>
      </InfoPageLayout>
    </>
  );
};

export const getStaticPaths = async () => {
  const resorts = await getAllResortNames();
  const paths = resorts.map(
    (resort: ResortNameObj) => `/${resort.state_slug}/${resort.id}/ski-resort`,
  );
  return { paths, fallback: false };
};

export const getStaticProps = async ({ params }: StaticProps) => {
  const { resort } = params;
  const resortInfo = await getResort(resort);
  return {
    props: { resortInfo },
  };
};

export default SkiResort;
